
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ShowType {
  MORNING_SHOW
  MATINEE_SHOW
  FIRST_SHOW
  SECOND_SHOW
  BENEFIT_SHOW
}

model Theater {
  id         String   @id @default(uuid())
  name       String
  location   String
  totalSeats Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  screens   Screen[]
  showtimes Showtime[]

  @@index([location, name])
}

model Screen {
  id        String   @id @default(uuid())
  number    Int // Screen number (e.g., Screen 1, Screen 2, etc.)
  capacity  Int // Number of seats in the screen
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  theaterId String // Foreign key to Theater
  theater   Theater @relation(fields: [theaterId], references: [id])

  showtimes Showtime[] // One screen can have multiple showtimes

  @@unique([number, theaterId])
  @@index([theaterId])
  
}

model Movie {
  id          String     @id @default(uuid())
  title       String
  description String?
  releaseDate DateTime
  duration    Int
  genres      String[]
  language    String
  ratings     Float      @default(0.0)
  posterUrl   String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  showtimes   Showtime[]

  @@index([releaseDate, title, genres,ratings])
}

model Showtime {
  id             String   @id @default(uuid())
  startTime      DateTime
  endTime        DateTime
  availableSeats Int
  showType       ShowType

  movieId String
  movie   Movie  @relation(fields: [movieId], references: [id])

  theaterId String
  theater   Theater @relation(fields: [theaterId], references: [id], onDelete: Cascade)

  screenId String
  screen   Screen @relation(fields: [screenId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([movieId, theaterId, startTime, screenId])
  @@index([startTime]) // Optimize filtering by show start time
  @@index([movieId]) // Optimize searching by movie
  @@index([theaterId]) // Optimize searching by theater
  @@index([screenId])
}
