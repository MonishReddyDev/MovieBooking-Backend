{"level":"error","message":"Error [CustomError] with status 500: UserRepository.findByEmail: \nInvalid `this.prisma.user.findUnique()` invocation in\n/Users/monishreddy/Desktop/2025-Start/MicroServices-Architectures/YourCityCinema-Backend/UserService/src/repository/UserRepository.ts:32:30\n\n  29 \n  30 async findByEmail(email: string): Promise<User | null> {\n  31   return prismaOperation(\n→ 32     () => this.prisma.user.findUnique(\nDatabase `UserServie` does not exist on the database server at `localhost:5432`.","service":"User-service","timestamp":"2025-03-31T23:31:19.259Z"}
{"level":"error","message":"Error [CustomError] with status 500: UserRepository.findByEmail: \nInvalid `this.prisma.user.findUnique()` invocation in\n/Users/monishreddy/Desktop/2025-Start/MicroServices-Architectures/YourCityCinema-Backend/UserService/src/repository/UserRepository.ts:33:30\n\n  30 \n  31 async findByEmail(email: string): Promise<User | null> {\n  32   return prismaOperation(\n→ 33     () => this.prisma.user.findUnique(\nDatabase `UserServce` does not exist on the database server at `localhost:5432`.","service":"Movie-service","timestamp":"2025-04-02T22:05:34.497Z"}
{"level":"error","message":"Error [CustomError] with status 500: UserRepository.findByEmail: \nInvalid `this.prisma.user.findUnique()` invocation in\n/Users/monishreddy/Desktop/2025-Start/MicroServices-Architectures/YourCityCinema-Backend/UserService/src/repository/UserRepository.ts:33:30\n\n  30 \n  31 async findByEmail(email: string): Promise<User | null> {\n  32   return prismaOperation(\n→ 33     () => this.prisma.user.findUnique(\nDatabase `UserServce` does not exist on the database server at `localhost:5432`.","service":"Movie-service","timestamp":"2025-04-02T22:05:34.858Z"}
{"level":"error","message":"Error [CustomError] with status 500: UserRepository.findByEmail: \nInvalid `this.prisma.user.findUnique()` invocation in\n/Users/monishreddy/Desktop/2025-Start/MicroServices-Architectures/YourCityCinema-Backend/UserService/src/repository/UserRepository.ts:33:30\n\n  30 \n  31 async findByEmail(email: string): Promise<User | null> {\n  32   return prismaOperation(\n→ 33     () => this.prisma.user.findUnique(\nDatabase `UserServce` does not exist on the database server at `localhost:5432`.","service":"Movie-service","timestamp":"2025-04-02T22:05:35.578Z"}
{"level":"error","message":"Error [CustomError] with status 400: Email already in use","service":"Movie-service","timestamp":"2025-04-02T22:34:02.369Z"}
{"level":"error","message":"Error [ValidationError] with status 400: Email already in use","method":"POST","route":"/api/auth/register","service":"Movie-service","stack":"ValidationError: Email already in use\n    at new ValidationError (/Users/monishreddy/Desktop/2025-Start/MicroServices-Architectures/YourCityCinema-Backend/UserService/src/utils/customError.ts:41:5)\n    at UserService.register (/Users/monishreddy/Desktop/2025-Start/MicroServices-Architectures/YourCityCinema-Backend/UserService/src/services/userService.ts:24:13)\n    at /Users/monishreddy/Desktop/2025-Start/MicroServices-Architectures/YourCityCinema-Backend/UserService/src/controllers/userController.ts:13:18\n    at UserController.register (/Users/monishreddy/Desktop/2025-Start/MicroServices-Architectures/YourCityCinema-Backend/UserService/src/utils/controllerWrapper.ts:9:41)","timestamp":"2025-04-02T22:34:02.385Z"}
{"level":"error","message":"Error [CustomError] with status 404: User not found","service":"Movie-service","timestamp":"2025-04-02T22:38:16.461Z"}
{"level":"error","message":"Error [NotFoundError] with status 404: User not found","method":"DELETE","route":"/api/auth/users/6f0d4cc6-1008-4cbc-9564-8f47df17d08c%22","service":"Movie-service","stack":"NotFoundError: User not found\n    at new NotFoundError (/Users/monishreddy/Desktop/2025-Start/MicroServices-Architectures/YourCityCinema-Backend/UserService/src/utils/customError.ts:40:5)\n    at UserService.getUserById (/Users/monishreddy/Desktop/2025-Start/MicroServices-Architectures/YourCityCinema-Backend/UserService/src/services/userService.ts:86:13)\n    at UserService.deleteUser (/Users/monishreddy/Desktop/2025-Start/MicroServices-Architectures/YourCityCinema-Backend/UserService/src/services/userService.ts:113:5)\n    at /Users/monishreddy/Desktop/2025-Start/MicroServices-Architectures/YourCityCinema-Backend/UserService/src/controllers/userController.ts:49:25\n    at UserController.deleteUser (/Users/monishreddy/Desktop/2025-Start/MicroServices-Architectures/YourCityCinema-Backend/UserService/src/utils/controllerWrapper.ts:9:41)","timestamp":"2025-04-02T22:38:16.482Z"}
{"level":"error","message":"Error [CustomError] with status 400: Email already in use","service":"Movie-service","timestamp":"2025-04-02T22:51:07.860Z"}
{"level":"error","message":"Error [ValidationError] with status 400: Email already in use","method":"POST","route":"/api/auth/register","service":"Movie-service","stack":"ValidationError: Email already in use\n    at new ValidationError (/Users/monishreddy/Desktop/2025-Start/MicroServices-Architectures/YourCityCinema-Backend/UserService/src/utils/ExceptionWrappers/customError.ts:47:5)\n    at UserService.register (/Users/monishreddy/Desktop/2025-Start/MicroServices-Architectures/YourCityCinema-Backend/UserService/src/services/userService.ts:28:13)\n    at /Users/monishreddy/Desktop/2025-Start/MicroServices-Architectures/YourCityCinema-Backend/UserService/src/controllers/userController.ts:12:18\n    at /Users/monishreddy/Desktop/2025-Start/MicroServices-Architectures/YourCityCinema-Backend/UserService/src/utils/ExceptionWrappers/controllerWrapper.ts:9:41","timestamp":"2025-04-02T22:51:07.878Z"}
